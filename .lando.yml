name: pxl_automated_testing
recipe: laravel
env_file:
  - .env
config:
  php: '8.1'
  xdebug: true
  webroot: laravel/public
services:
  appserver:
    overrides:
      environment:
        PHP_IDE_CONFIG: "serverName=appserver"
        XDEBUG_SESSION_START: lando
    run:
      - echo 'Run after build'
      - echo 'Install composer'
      - cd /app/laravel && composer install --prefer-dist
      - echo 'Copy .env file'
      - cd /app/laravel && php -r "file_exists('.env') || copy('.env.example', '.env');"
      - echo 'Generate key for .env'
      - cd /app/laravel && php artisan key:generate --ansi
      - echo 'Setup GrumPHP'
      - cd /app/laravel && ./vendor/bin/grumphp git:init
tooling:
  test:
    service: appserver
    dir: /app/laravel
    cmd: ./vendor/bin/phpunit
  phpstan-analyse:
    service: appserver
    dir: /app/laravel
    cmd: "./vendor/bin/phpstan analyse --memory-limit=2G"
  phpstan-baseline:
    service: appserver
    dir: /app/laravel
    cmd: "./vendor/bin/phpstan analyse --memory-limit=2G --generate-baseline"
  phpcs:
    service: appserver
    dir: /app/laravel
    cmd: ./vendor/bin/phpcs
  phpcs-fix:
    service: appserver
    dir: /app/laravel
    cmd: ./vendor/bin/phpcbf
  grumphp:
    service: appserver
    dir: /app/laravel
    cmd: ./vendor/bin/grumphp
  grumphp-php:
    service: appserver
    dir: /app/laravel
    cmd: php
  composer:
    service: appserver
    dir: /app/laravel
  xdebug-on:
    service: appserver
    description: Enable xdebug for apache.
    cmd: "docker-php-ext-enable xdebug && /etc/init.d/apache2 reload"
    user: root
  xdebug-off:
    service: appserver
    description: Disable xdebug for apache.
    cmd: "rm -f /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && /etc/init.d/apache2 reload"
    user: root